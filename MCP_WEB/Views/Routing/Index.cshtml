
<style>
    .dx-datagrid .dx-link {
        text-decoration: none;
        cursor: pointer;
    }

    .dx-icon-edit {
        font-size: 18px;
    }
</style>

@(Html.DevExtreme().DataGrid<MCP_WEB.Models.m_Routing>()
                              .DataSource(ds => ds.Mvc()
                                  .Controller("m_Routing")
                                  .LoadAction("get")
                                  .Key("ItemCode", "OperationNo")
                              )
                              .ID("gridContainer")
                              .RemoteOperations(true)
                              .ShowColumnLines(true)
                              .ShowRowLines(true)
                              .RowAlternationEnabled(true)
                              .ShowBorders(true)
                              .FilterRow(f => f.Visible(true))
                              .SearchPanel(p => p.Visible(true))
                              .Pager(p => p
                              .AllowedPageSizes(new int[] { 10, 25, 50, 100 })
                              .ShowInfo(true)
                              .ShowNavigationButtons(true)
                              .ShowPageSizeSelector(true)
                              .Visible(true))
                              .Paging(p => p.PageSize(10))
                              .ColumnChooser(c => c
                                .Enabled(true)
                                .Mode(GridColumnChooserMode.DragAndDrop))
                              .AllowColumnResizing(true)
                              .ColumnMinWidth(50)
                              .ColumnAutoWidth(true)
                              .ColumnHidingEnabled(true)
                             .Export(e => e.Enabled(true).FileName("Routing - " + DateTime.Now).AllowExportSelectedData(true))

)

@(Html.DevExtreme().Popup().ID("AddPopup").Title("New Routing").Visible(false)
                              .ElementAttr("class", "popup")

                              .DragEnabled(false)
                              .CloseOnOutsideClick(true)
                              .ResizeEnabled(true)
                              .ContentTemplate(new TemplateName("Add"))
)

@(Html.DevExtreme().Popup().ID("EditPopup").Title("Edit Routing").Visible(false)
                              .ElementAttr("class", "popup")

                                   .DragEnabled(false)
                                   .CloseOnOutsideClick(true)
                                   .ResizeEnabled(true)
                                .ContentTemplate(new TemplateName("Edit"))
)
@using (Html.DevExtreme().NamedTemplate("Add"))
{
    @await Html.PartialAsync("_Add")
}
@using (Html.DevExtreme().NamedTemplate("Edit"))
{
    @await Html.PartialAsync("_Edit")
}
<script>
    function moveEditColumnToLeft(dataGrid) {
        dataGrid.columnOption("command:edit", {
            visibleIndex: -1
        });
    }

    $(function () {
        function getMomsAvdrag(evArgs, cellTemplateArgs) {
            console.log(cellTemplateArgs.data);
        }
    });

    $(function () {
        $("#gridContainer").dxDataGrid({
            selection: {
                mode: "multiple",
                selectAllMode: "page",
                recursive: false,
                showCheckBoxesInMultipleMode: 'none'
            },
            headerFilter: {
                visible: true
            },
            summary: {
                totalItems: [{
                    column: "PiecePerMin",
                    summaryType: "sum",
                    displayFormat: "Total : {0}",
                    valueFormat:"#,##0.00"
                }]
            },
            columns: [{
                caption: "Manage",
                alignment:"center",
                width: 50,
                maxwidth: 50,
                cellTemplate: function (container, options) {
                    $('<a/>').addClass('dx-link dx-link-edit dx-icon-edit text-center')
                        .on('dxclick', function () {
                            $('#EditPopup').dxPopup('instance').option('visible', true);
                            $("#PartNo_Edit").dxLookup("instance").option("value", options.data.ItemCode);
                            $("#PartName_Edit").text(options.data.PartName);
                            $("#Model_Edit").text(options.data.Model);
                            $("#Fcode_Edit").text(options.data.Fcode);
                            $("#GridEdit").dxDataGrid({
                                dataSource: DevExpress.data.AspNet.createStore({
                                    key: ["ItemCode", "OperationNo"],
                                    loadUrl: "api/m_Routing/NewData?loadOptions=" + options.data.ItemCode,
                                    insertUrl: "api/m_Routing/Post",
                                    updateUrl: "api/m_Routing/Put",
                                    deleteUrl: "api/m_Routing/Delete",
                                    onBeforeSend: function (method, ajaxOptions) {
                                        ajaxOptions.xhrFields = { withCredentials: true };
                                    }
                                })
                            });
                        })
                        .appendTo(container);
                }

            }, {
                dataField: "ItemCode",
                caption: "Part No.",
                allowFiltering: true,
                allowHeaderFiltering: true,
                headerFilter: {
                    visible: true,
                    allowSearch: true
                },
                //selectedFilterOperation: "contains",
                //lookup: {
                //    dataSource: DevExpress.data.AspNet.createStore({
                //        key: "ItemCode",
                //        loadUrl: "api/RoutingLookup/GetTypeF",
                //        onBeforeSend: function (method, ajaxOptions) {
                //            ajaxOptions.xhrFields = { withCredentials: true };
                //        }
                //    }),
                //    valueExpr: "ItemCode",
                //    displayExpr: "ItemCode",
                //    sortOrder: 'asc'
                //},
                //validationRules: [{ type: "required" }],
                sortOrder: 'asc',

                editorOptions: {
                    showClearButton: true
                }
            }, {
                dataField: "PartName",
                caption: "Part Name.",
                    visible: false,
                    editorOptions: {
                        showClearButton: true
                    }

            }, {
                dataField: "Model",
                    caption: "Model.",
                    editorOptions: {
                        showClearButton: true
                    }
            }, {
                dataField: "Fcode",
                    caption: "F-CODE.",
                    editorOptions: {
                        showClearButton: true
                    }
            }, {
                dataField: "OperationNo",
                caption: "Operation No.",
                    validationRules: [{ type: "required" }]
                    ,
                    editorOptions: {
                        showClearButton: true
                    }
            }, {
                dataField: "ProcessCode",
                caption: "Process Key.",
                lookup: {
                    dataSource: DevExpress.data.AspNet.createStore({
                        key: "ProcessCode",
                        loadUrl: "api/RoutingLookup/GetProcessMstr",
                        onBeforeSend: function (method, ajaxOptions) {
                            ajaxOptions.xhrFields = { withCredentials: true };
                        }
                    }),
                    valueExpr: "ProcessCode",
                    displayExpr: "ProcessCode",
                    allowClearing: true
                },
                editorOptions: {
                        showClearButton: true
                }
            }, {
                dataField: "MachineCode",
                caption: "Machine No.",
                lookup: {
                    dataSource: DevExpress.data.AspNet.createStore({
                        key: "MachineCode",
                        loadUrl: "api/RoutingLookup/GetMachineMstr",
                        onBeforeSend: function (method, ajaxOptions) {
                            ajaxOptions.xhrFields = { withCredentials: true };
                        }
                    }),
                    valueExpr: "MachineCode",
                    displayExpr: "MachineCode",
                    allowClearing: true
                    },
                    editorOptions: {
                        showClearButton: true
                    }
            }, {
                dataField: "PiecePerMin",
                caption: "PiecePerMin.",
                dataType: "number",
                format: "#,##0.00",
                    editorOptions: {
                        showClearButton: true
                    }
            }, {
                dataField: "TransDate",
                caption: "TransDate.",
                visible: false,
                dataType: 'date',
                    format: "@ViewBag.format",
                    editorOptions: {
                        showClearButton: true
                    }

            }, {
                dataField: "CreateDate",
                caption: "CreateDate.",
                visible: false,
                dataType: 'date',
                    format: "@ViewBag.format",
                    editorOptions: {
                        showClearButton: true
                    }
            }, {
                dataField: "ModifyBy",
                caption: "ModifyBy.",
                visible: false
            }],

            onToolbarPreparing: function (e) {
                var toolbarItems = e.toolbarOptions.items;
                $.each(toolbarItems, function (_, item) {
                    if (item.name === "saveButton") {
                    }
                });
                toolbarItems.unshift({
                    widget: 'dxButton',
                    options: {
                        icon: "plus", onClick: function (e) { addData() }
                    },
                    location: 'after'
                });
            },
            columnFixing: {
                enabled: true
            }
        });
    });
    function addData() {
        $('#AddPopup').dxPopup('instance').option('visible', true);
    }


    $(function () {
        $("#AddPopup").dxPopup({
            showCloseButton: true,
            buttons: [{ toolbar: 'bottom', location: 'center', onClick: function (e) { $("#popupContainer").dxPopup("instance").hide(); }, widget: 'button', options: { text: 'Ok' } }],
            onShowing: function (e) {
                $("#PartNo").dxLookup({
                    disabled: false
                });

            },
            onHiding: function (e) {
                $("#PartNo").dxLookup({
                    disabled: false
                });
                $("#PartNo").dxLookup("instance").option("value", '');
                $("#PartName").text('');
                $("#Model").text('');
                $("#Fcode").text('');
                $("#GridAdd").dxDataGrid("instance").cancelEditData();
                $("#gridContainer").dxDataGrid("instance").refresh();
            },
            closeOnOutsideClick: function (e) {
                return e.target === $("#someElement").get()[0];
            }

        });
        $("#EditPopup").dxPopup({
            showCloseButton: true,
            buttons: [{ toolbar: 'bottom', location: 'center', onClick: function (e) { $("#popupContainer").dxPopup("instance").hide(); }, widget: 'button', options: { text: 'Ok' } }],
            onShowing: function (e) {
                $("#PartNo_Edit").dxLookup({
                    disabled: true
                });

            },
            onHiding: function (e) {
                $("#PartNo_Edit").dxLookup({
                    disabled: false
                });
                $("#PartNo_Edit").dxLookup("instance").option("value", '');
                $("#PartName_Edit").text('');
                $("#Model_Edit").text('');
                $("#Fcode_Edit").text('');
                $("#GridEdit").dxDataGrid("instance").cancelEditData();
                $("#gridContainer").dxDataGrid("instance").refresh();
            },
            closeOnOutsideClick: function (e) {
                return e.target === $("#someElement").get()[0];
            }

        });
    });


</script>
