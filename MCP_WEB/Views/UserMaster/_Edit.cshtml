<div id="scrollpop" class="scrollpop">
    <div class="contentpop">
        @model MCP_WEB.Models.m_UserMaster
        @using (Html.BeginForm())
        {
            using (Html.DevExtreme().ValidationGroup())
            {
                @Html.AntiForgeryToken()
                <form id="form1" name="form1">
                    <div class="form-group">

                        <label class="col-lg-2 ">UserName : <span style="color:red;">*</span></label>
                        <div class="col-lg-4" style="padding-bottom:10px;">
                            @(Html.DevExtreme().TextBox().ID("txtUserName").Name("UserName"))

                        </div>
                        @if (ViewBag.adminstatus == 1)
                        {
                            <label class="col-lg-2 ">UserPassword : <span style="color:red;">*</span></label>
                            <div class="col-lg-4" style="padding-bottom:10px;">
                                @Html.DevExtreme().TextBox().Mode(TextBoxMode.Password).ID("txtUserPassword").Name("UserPassword")
                            </div><br />
                        }
                        <label class="col-lg-2 ">FirstName : </label>
                        <div class="col-lg-4" style="padding-bottom:10px;">
                            @Html.DevExtreme().TextBox().ID("txtFirstName").Name("FirstName")
                        </div>

                        <label class="col-lg-2 ">LastName : </label>
                        <div class="col-lg-4" style="padding-bottom:10px;">
                            @Html.DevExtreme().TextBox().ID("txtLastName").Name("LastName")
                        </div>

                        <label class="col-lg-2 ">Email : </label>
                        <div class="col-lg-4" style="padding-bottom:10px;">
                            @Html.DevExtreme().TextBox().Mode(TextBoxMode.Email).ID("txtUserEmail").Name("UserEmail")
                        </div>

                        <label class="col-lg-2 ">Shift : </label>
                        <div class="col-lg-4" style="padding-bottom:10px;">
                            @*<div id="txtShiftType"></div>*@
                            @(Html.DevExtreme().SelectBox().ID("txtShiftType").Name("ShiftID")
                            )
                            @*<div class="dx-texteditor-container">
                <div class="form-group">
                    <select id="shifttest" class="form-control">

                    </select>
                    <script>
                        function lookup_valueChanged(e) {
                            var x = e.ShiftID;
                            //alert(x);
                            //$(".selected").show();
                            //$("#selected-employee-img").attr("src", e.value.Picture);
                            //$("#selected-employee-notes").text(e.value.Notes);
                        }

                        $.ajax({
                    url: "@Url.Action("ShiftLookup", "m_UserMaster")",
                    //data: {selectedValue:selectedValue},
                    dataType: "json",
                    type: "GET",
                    error: function () {
                        alert(" An error occurred.");
                    },
                    success: function (data) {
                        //var optionhtml1 = '<option value="' +
                        // 0 + '">' + "--Select Shift...--" + '</option>';
                        //$("#shifttest").append(optionhtml1);

                        $.each(data, function (j,k) {
                            for (var i = 0; i < k.length; i++) {
                                var optionhtml = '<option value="' +
                                    k[i].ShiftID + '">' + k[i].ShiftType + '</option>';
                                $("#shifttest").append(optionhtml);
                            }

                        });
                    }
                });
                    </script>
                </div>
            </div>*@

                        </div>


                        <label class="col-lg-2 ">Department : </label>
                        <div class="col-lg-4" style="padding-bottom:10px;">
                            @*<div id="txtDepID"></div>*@
                            @(Html.DevExtreme().SelectBox().ID("txtDepID").Name("DepID")
                            )
                        </div>

                        <label class="col-lg-2 ">Status : </label>
                        <div class="col-lg-4" style="padding-bottom:10px;">
                            @(Html.DevExtreme().SelectBox().ID("txtStatus").Name("Status")
                                                                        .DataSource(new string[] { "Active", "Inactive" })
                                                                    .SearchEnabled(true)

                            )
                        </div>
                        <label class="col-lg-2 ">MenuIdentity : </label>
                        <div class="col-lg-4" style="padding-bottom:10px;">
                            <div id="scrolllist" class="dxlist-scroll">

                                @(Html.DevExtreme().List()
                                            //.SelectionMode(ListSelectionMode.All)
                                            .ID("listMenuIdentity")
                                            .ShowSelectionControls(true)
                                            .SearchEnabled(true).SearchExpr(new string[] { "MenuName" })
                                )

                            </div>
                        </div>

                        <div class="col-sm-offset-2 col-sm-10" style="text-align:right; padding-bottom:10px;">
                            <div id="selection-treeview"></div>
                            <div class="selected-data">

                                <div id="checked-items"></div>
                            </div>
                            @(Html.DevExtreme().Button().ID("btnSave").Disabled(false)
                                                                        .Text("Save")
                                                                        .OnClick("function (e) { if(e.validationGroup.validate().isValid){SaveEdit(e);} else{e.stopPropagation();}}"))

                            @(Html.DevExtreme().Button().Type(ButtonType.Normal)
                                                                        .Text("Cancel")
                                                                        .OnClick("function (e) { canselButtonClick() }"))
                        </div>
                    </div>
                </form>
            }
        }
    </div>
</div>

<script>
    //var arrselected = [];
    //var arrMenuIdentity = [];
    //var arrMenuIdentityall = [];
    //var arrgetitem = [];
    //var depMenus = [];
    //var sshift = [];
    //var choose_dep = 0;
   
    function itemtemplateselect(itemData, itemIndex, itemElement) {
        return $("<p />").text(itemData.ShiftType);
    }

    function ShowConfirmDialog(message, title) {
        return DevExpress.ui.dialog.confirm(message, title);
    }

    function canselButtonClick() {
        arrgetitem = [];
        $('#EditPopup').dxPopup('instance').option('visible', false);

    }

    function SaveEdit() {
        //var hashed = hex2a("CY9rzUYh03PK3k6DJie09g==");
        var UserName = $("#txtUserName").dxTextBox("instance").option("value");
        
        var FirstName = $("#txtFirstName").dxTextBox("instance").option("value");
        var LastName = $("#txtLastName").dxTextBox("instance").option("value");
        var UserEmail = $("#txtUserEmail").dxTextBox("instance").option("value");
        var Status = $("#txtStatus").dxSelectBox("instance").option("value");
        var statusadmin =@(ViewBag.adminstatus);
        var getdataedit;
        if (statusadmin == 1) {
            var UserPassword = $("#txtUserPassword").dxTextBox("instance").option("value");
            getdataedit = {
                "getuserid": getuserid_onedit,
                "getitem": arrgetitem,
                "UserName": UserName,
                "UserPassword": UserPassword,
                "FirstName": FirstName,
                "LastName": LastName,
                "UserEmail": UserEmail,
                "ShiftID": selectedShift,
                "DepID": selectedDep,
                "Status": $("#Status").val()
            };
        } else {
            getdataedit = {
                "getuserid": getuserid_onedit,
                "getitem": arrgetitem,
                "UserName": UserName,
                //"UserPassword": UserPassword,
                "FirstName": FirstName,
                "LastName": LastName,
                "UserEmail": UserEmail,
                "ShiftID": selectedShift,
                "DepID": selectedDep,
                "Status": $("#Status").val()
            };
        }
        //console.log(getdataedit);
        $.ajax({
            type: 'POST',
            url: '@Url.Action("Update", "m_UserMaster", new { httproute = true })',
            data:  getdataedit ,
                    async: false,
                    beforeSend: function () {/*loading*/ },
                    dataType: 'json',
                    success: function (data) {
                    if (data == 0) {
                        DevExpress.ui.notify("Edit Username: " + UserName + " error Plase choose Deparment.", "error", 2000);
                    } else {
                        canselButtonClick();
                        $('#gridContainer').dxDataGrid('instance').refresh();
                    }

                    //$.each(data, function (item, value) {
                    //    DevExpress.ui.notify("Edit Username: " + value.UserName + " success.", "success", 1000);
                    //});

                    },
                    error: function (ob, errStr) {
                       
                        DevExpress.ui.notify(errStr, "error", 2000);
                    }
                });

        var tmp = str2rstr_utf8('CY9rzUYh03PK3k6DJie09g==');
        String.prototype.hashCode = function () {
            var hash = 0;
            if (this.length == 0) return hash;
            for (i = 0; i < this.length; i++) {
                char = this.charCodeAt(i);
                hash = ((hash << 5) - hash) + char;
                hash = hash & hash; // Convert to 32bit integer
            }
            console.log(hash);
        }
        //var hashed = hex2a(MD5(tmp));
        //console.log(String.prototype.hashCode);
    }

    function str2rstr_utf8(input) {
        var output = "";
        var i = -1;
        var x, y;

        while (++i < input.length) {
            /* Decode utf-16 surrogate pairs */
            x = input.charCodeAt(i);
            y = i + 1 < input.length ? input.charCodeAt(i + 1) : 0;
            if (0xD800 <= x && x <= 0xDBFF && 0xDC00 <= y && y <= 0xDFFF) {
                x = 0x10000 + ((x & 0x03FF) << 10) + (y & 0x03FF);
                i++;
            }

            /* Encode output as utf-8 */
            if (x <= 0x7F)
                output += String.fromCharCode(x);
            else if (x <= 0x7FF)
                output += String.fromCharCode(0xC0 | ((x >>> 6) & 0x1F),
                    0x80 | (x & 0x3F));
            else if (x <= 0xFFFF)
                output += String.fromCharCode(0xE0 | ((x >>> 12) & 0x0F),
                    0x80 | ((x >>> 6) & 0x3F),
                    0x80 | (x & 0x3F));
            else if (x <= 0x1FFFFF)
                output += String.fromCharCode(0xF0 | ((x >>> 18) & 0x07),
                    0x80 | ((x >>> 12) & 0x3F),
                    0x80 | ((x >>> 6) & 0x3F),
                    0x80 | (x & 0x3F));
        }
        return output;
    }
   
    //function hex2a(hexx) {
    //    var hex = hexx.toString();//force conversion
    //    var str = '';
    //    for (var i = 0; i < hex.length; i += 2)
    //        str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));
    //    return str;
    //}
   
    
</script>