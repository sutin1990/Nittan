// <auto-generated />
using System;
using MCP_WEB.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MCP_WEB.Migrations
{
    [DbContext(typeof(NittanDBcontext))]
    [Migration("20181107163728_initmigrations20181107")]
    partial class initmigrations20181107
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MCP_WEB.Models.Isonite", b =>
                {
                    b.Property<string>("IsoniteCode")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BPCodeFrom")
                        .IsRequired();

                    b.Property<string>("BPCodeTO")
                        .IsRequired();

                    b.Property<DateTime?>("CreateDate");

                    b.Property<DateTime?>("DocDate");

                    b.Property<string>("DocStatus");

                    b.Property<string>("IsoniteUserDef1");

                    b.Property<string>("IsoniteUserDef2");

                    b.Property<string>("IsoniteUserDef3");

                    b.Property<string>("JigNo1");

                    b.Property<string>("JigNo2");

                    b.Property<string>("JigNo3");

                    b.Property<string>("ModifyBy");

                    b.Property<DateTime?>("TransDate");

                    b.HasKey("IsoniteCode");

                    b.ToTable("Isonite");
                });

            modelBuilder.Entity("MCP_WEB.Models.Isonite_Line", b =>
                {
                    b.Property<int>("RECID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode");

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("IsoniteCode")
                        .IsRequired();

                    b.Property<string>("IsoniteLineUserDef1");

                    b.Property<string>("IsoniteLineUserDef2");

                    b.Property<string>("IsoniteLineUserDef3");

                    b.Property<int>("JigAddresss");

                    b.Property<string>("JigNo")
                        .IsRequired();

                    b.Property<string>("ModifyBy");

                    b.Property<int>("RecQty");

                    b.Property<string>("RefIsoniteCode");

                    b.Property<int>("RefJigAddress");

                    b.Property<int>("SentQty");

                    b.Property<DateTime>("TransDate");

                    b.HasKey("RECID");

                    b.ToTable("Isonite_Line");
                });

            modelBuilder.Entity("MCP_WEB.Models.Isonite_temp", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode");

                    b.Property<string>("Qty");

                    b.HasKey("ID");

                    b.ToTable("isonite_temp");
                });

            modelBuilder.Entity("MCP_WEB.Models.m_BOM", b =>
                {
                    b.Property<string>("ItemCode")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BOMUserDef1");

                    b.Property<string>("BOMUserDef2");

                    b.Property<string>("BOMUserDef3");

                    b.Property<string>("BOMUserDef4");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("Material1");

                    b.Property<string>("Material2");

                    b.Property<string>("ModifyBy");

                    b.Property<DateTime?>("TransDate");

                    b.HasKey("ItemCode");

                    b.ToTable("m_BOM");
                });

            modelBuilder.Entity("MCP_WEB.Models.m_BPMaster", b =>
                {
                    b.Property<string>("BPCode")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BPAddress1");

                    b.Property<string>("BPAddress2");

                    b.Property<string>("BPAddress3");

                    b.Property<string>("BPAddress4");

                    b.Property<string>("BPAddress5");

                    b.Property<string>("BPAddress6");

                    b.Property<string>("BPName")
                        .IsRequired();

                    b.Property<string>("BPType")
                        .IsRequired();

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("ModifyBy");

                    b.Property<string>("PackingID");

                    b.Property<string>("TagFormat");

                    b.Property<DateTime?>("TransDate");

                    b.HasKey("BPCode");

                    b.ToTable("m_BPMaster");
                });

            modelBuilder.Entity("MCP_WEB.Models.m_Dep", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate")
                        .IsRequired();

                    b.Property<string>("DepDesc")
                        .IsRequired();

                    b.Property<string>("DepID")
                        .IsRequired();

                    b.Property<string>("ModifyBy");

                    b.Property<DateTime?>("TransDate")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("m_Dep");
                });

            modelBuilder.Entity("MCP_WEB.Models.m_DepMenu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate")
                        .IsRequired();

                    b.Property<string>("DepID")
                        .IsRequired();

                    b.Property<int>("MenuIdentity");

                    b.Property<string>("ModifyBy");

                    b.Property<DateTime?>("TransDate")
                        .IsRequired();

                    b.HasKey("ID");

                    b.HasIndex("MenuIdentity");

                    b.ToTable("m_DepMenu");
                });

            modelBuilder.Entity("MCP_WEB.Models.m_Jig", b =>
                {
                    b.Property<int>("JigID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Column");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("JigNo");

                    b.Property<string>("JigUserDef1");

                    b.Property<string>("JigUserDef2");

                    b.Property<string>("ModifyBy");

                    b.Property<int>("Row");

                    b.Property<DateTime?>("TransDate");

                    b.HasKey("JigID");

                    b.ToTable("m_Jig");
                });

            modelBuilder.Entity("MCP_WEB.Models.m_MachineMaster", b =>
                {
                    b.Property<string>("MachineCode")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("MachineName")
                        .IsRequired();

                    b.Property<string>("MachineUserDef1");

                    b.Property<string>("MachineUserDef2");

                    b.Property<string>("ModifyBy");

                    b.Property<DateTime?>("TransDate");

                    b.HasKey("MachineCode");

                    b.ToTable("m_MachineMaster");
                });

            modelBuilder.Entity("MCP_WEB.Models.m_Package", b =>
                {
                    b.Property<string>("PackID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("ModifyBy");

                    b.Property<string>("PackDesc")
                        .IsRequired();

                    b.Property<int>("PackQty");

                    b.Property<string>("PackType")
                        .IsRequired();

                    b.Property<DateTime>("TransDate");

                    b.HasKey("PackID");

                    b.ToTable("m_Package");
                });

            modelBuilder.Entity("MCP_WEB.Models.m_ProcessMaster", b =>
                {
                    b.Property<string>("ProcessCode")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AllowPartialFlag");

                    b.Property<DateTime?>("CreateDate")
                        .IsRequired();

                    b.Property<string>("ModifyBy")
                        .IsRequired();

                    b.Property<string>("ProcessName")
                        .IsRequired();

                    b.Property<string>("ProcessUserDef1");

                    b.Property<string>("ProcessUserDef2");

                    b.Property<int?>("SeqNo");

                    b.Property<string>("SysemProcessFLag");

                    b.Property<DateTime?>("TransDate")
                        .IsRequired();

                    b.HasKey("ProcessCode");

                    b.ToTable("m_ProcessMaster");
                });

            modelBuilder.Entity("MCP_WEB.Models.m_Resource", b =>
                {
                    b.Property<string>("ItemCode")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BPCode")
                        .IsRequired();

                    b.Property<string>("Batch1");

                    b.Property<string>("Batch2");

                    b.Property<string>("Color");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<decimal?>("Dimension1");

                    b.Property<decimal?>("Dimension2");

                    b.Property<string>("Fcode")
                        .IsRequired();

                    b.Property<string>("HeatNo");

                    b.Property<string>("ItemImage");

                    b.Property<string>("ItemName")
                        .IsRequired();

                    b.Property<string>("ItemType");

                    b.Property<string>("ItemUserDef1");

                    b.Property<string>("ItemUserDef2");

                    b.Property<string>("ItemUserDef3");

                    b.Property<string>("ItemUserDef4");

                    b.Property<string>("ItemUserDef5");

                    b.Property<int?>("Length");

                    b.Property<string>("LengthUom");

                    b.Property<string>("Model")
                        .IsRequired();

                    b.Property<string>("ModifyBy");

                    b.Property<string>("Status");

                    b.Property<int?>("StdLotSize");

                    b.Property<int?>("Tolerance");

                    b.Property<DateTime?>("TransDate");

                    b.Property<string>("Uom");

                    b.HasKey("ItemCode");

                    b.ToTable("m_Resource");
                });

            modelBuilder.Entity("MCP_WEB.Models.m_Routing", b =>
                {
                    b.Property<string>("ItemCode");

                    b.Property<int>("OperationNo");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("MachineCode");

                    b.Property<string>("ModifyBy");

                    b.Property<decimal?>("PiecePerMin");

                    b.Property<string>("ProcessCode")
                        .IsRequired();

                    b.Property<DateTime?>("TransDate");

                    b.HasKey("ItemCode", "OperationNo");

                    b.ToTable("m_Routing");
                });

            modelBuilder.Entity("MCP_WEB.Models.m_Shift", b =>
                {
                    b.Property<int>("ShiftID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate");

                    b.Property<DateTime>("EndTime");

                    b.Property<string>("ModifyBy");

                    b.Property<string>("ShiftDesc");

                    b.Property<string>("ShiftType")
                        .IsRequired();

                    b.Property<DateTime>("StartTime");

                    b.Property<DateTime>("TransDate");

                    b.HasKey("ShiftID");

                    b.ToTable("m_Shift");
                });

            modelBuilder.Entity("MCP_WEB.Models.m_UserMaster", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClusterCode")
                        .IsRequired();

                    b.Property<string>("CompanyCode");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("DepID")
                        .IsRequired();

                    b.Property<string>("EmployeeCode");

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<DateTime?>("LastSignedin");

                    b.Property<string>("LocationCode");

                    b.Property<string>("ModifyBy");

                    b.Property<int>("ShiftID");

                    b.Property<string>("Status")
                        .IsRequired();

                    b.Property<DateTime?>("TransDate");

                    b.Property<string>("UserCreated");

                    b.Property<string>("UserEmail")
                        .IsRequired();

                    b.Property<DateTime?>("UserExpireDate");

                    b.Property<byte[]>("UserImage");

                    b.Property<string>("UserLocationId");

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("UserRoll");

                    b.HasKey("UserId");

                    b.ToTable("m_UserMaster");
                });

            modelBuilder.Entity("MCP_WEB.Models.m_UserPermiss", b =>
                {
                    b.Property<int>("PerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreateDate");

                    b.Property<int>("MenuIdentity");

                    b.Property<string>("ModifyBy")
                        .IsRequired();

                    b.Property<DateTime?>("TransDate");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("PerID");

                    b.ToTable("m_UserPermiss");
                });

            modelBuilder.Entity("MCP_WEB.Models.MenuMaster", b =>
                {
                    b.Property<int>("MenuIdentity")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("MenuFileName");

                    b.Property<string>("MenuID")
                        .IsRequired();

                    b.Property<string>("MenuName")
                        .IsRequired();

                    b.Property<string>("MenuURL");

                    b.Property<string>("Parent_MenuID");

                    b.Property<string>("USE_YN");

                    b.Property<string>("User_Roll")
                        .IsRequired();

                    b.HasKey("MenuIdentity");

                    b.ToTable("MenuMaster");
                });

            modelBuilder.Entity("MCP_WEB.Models.s_GlobalPams", b =>
                {
                    b.Property<string>("parm_key")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("opt1");

                    b.Property<string>("opt2");

                    b.Property<string>("param_value");

                    b.Property<string>("parm_desc");

                    b.HasKey("parm_key");

                    b.ToTable("s_GlobalPams");
                });

            modelBuilder.Entity("MCP_WEB.Models.s_ProcessLog", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ErrorKey");

                    b.Property<string>("Msg");

                    b.Property<DateTime?>("ProcessDate");

                    b.Property<string>("ProcessID")
                        .IsRequired();

                    b.Property<string>("RecordKey1");

                    b.Property<string>("RecordKey2");

                    b.HasKey("id");

                    b.ToTable("s_ProcessLog");
                });

            modelBuilder.Entity("MCP_WEB.Models.UserMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClusterId");

                    b.Property<string>("CompanyId");

                    b.Property<DateTime?>("DateChanged");

                    b.Property<DateTime?>("DateCreated");

                    b.Property<string>("EmployeeId");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("LocationId");

                    b.Property<string>("MaxAddress");

                    b.Property<int?>("MaxUserQty");

                    b.Property<string>("PrintBillFlag");

                    b.Property<string>("UserChanged");

                    b.Property<string>("UserCreated");

                    b.Property<string>("UserEmail");

                    b.Property<DateTime?>("UserExpireDate");

                    b.Property<string>("UserId");

                    b.Property<byte[]>("UserImage");

                    b.Property<string>("UserLayer");

                    b.Property<string>("UserLocationId");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("UserMaster");
                });

            modelBuilder.Entity("MCP_WEB.Models.WeeklyPlan", b =>
                {
                    b.Property<string>("BarCode")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreateBy");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("ItemCode");

                    b.Property<string>("PlanUserDef1");

                    b.Property<string>("PlanUserDef2");

                    b.Property<int?>("QtyOrder");

                    b.Property<int?>("QtyOrderAll");

                    b.Property<string>("SeriesLot");

                    b.Property<int?>("StdLotSize");

                    b.Property<string>("UpdateBy");

                    b.Property<DateTime?>("UpdateDate");

                    b.Property<string>("WStatus");

                    b.HasKey("BarCode");

                    b.ToTable("WeeklyPlan");
                });

            modelBuilder.Entity("MCP_WEB.Models.WoBOM", b =>
                {
                    b.Property<string>("BarCode")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Material1");

                    b.Property<string>("Material2");

                    b.Property<string>("ModifyBy");

                    b.Property<DateTime>("TransDate");

                    b.HasKey("BarCode");

                    b.ToTable("WoBOM");
                });

            modelBuilder.Entity("MCP_WEB.Models.WoRouting", b =>
                {
                    b.Property<string>("BarCode");

                    b.Property<int>("OperationNo");

                    b.Property<string>("AllowPartialFlag");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("MachineCode");

                    b.Property<string>("MainProcessFlag");

                    b.Property<string>("ModifyBy");

                    b.Property<string>("PStatus");

                    b.Property<string>("ProcessCode");

                    b.Property<int?>("QtyComplete");

                    b.Property<int?>("QtyNG");

                    b.Property<int?>("QtyOrder");

                    b.Property<DateTime?>("TransDate");

                    b.HasKey("BarCode", "OperationNo");

                    b.ToTable("WoRouting");
                });

            modelBuilder.Entity("MCP_WEB.Models.WoRoutingMovement", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BarCode");

                    b.Property<DateTime?>("CreateDate");

                    b.Property<string>("ModifyBy");

                    b.Property<int?>("OperationNo");

                    b.Property<int?>("QtyComplete");

                    b.Property<int?>("QtyNG");

                    b.Property<int?>("ShiftID");

                    b.Property<DateTime?>("TransDate");

                    b.HasKey("id");

                    b.ToTable("WoRoutingMovement");
                });

            modelBuilder.Entity("MCP_WEB.Models.m_DepMenu", b =>
                {
                    b.HasOne("MCP_WEB.Models.MenuMaster", "MenuMaster")
                        .WithMany()
                        .HasForeignKey("MenuIdentity")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
